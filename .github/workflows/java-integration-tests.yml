name: Run Java Integration Tests and Samples

on:
  workflow_dispatch:
  push:
    branches: ["main", "java-development"]
    paths:
      - 'java/**'
  pull_request:
    branches: ["main", "java-development"]
    paths:
      - 'java/**'

permissions:
  contents: read

jobs:
  paths-filter:
    runs-on: ubuntu-22.04
    outputs:
      javaChanges: ${{ steps.filter.outputs.java }}
    timeout-minutes: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb5618
      - name: Check if java files have changed
        uses: dorny/paths-filter@7267a85
        id: filter
        with:
          filters: |
            java:
              - 'java/**'
              - '**/java/**'
      # run only if 'java' files were changed
      - name: java tests
        if: steps.filter.outputs.java == 'true'
        run: echo "Java file"
      # run only if not 'java' files were changed
      - name: not java tests
        if: steps.filter.outputs.java != 'true'
        run: echo "NOT java file"
  java-integration-tests:
    runs-on: ubuntu-22.04
    needs: paths-filter
    if: needs.paths-filter.outputs.javaChanges == 'true'
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        include:
          - java-version: 8
            jdk-version: 11
          - java-version: 17
            jdk-version: 17

    name: Java Tests on JDK${{ matrix.java-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@9bb5618

      # Need to use JDK 11 to build for JDK 8

      - name: Setup java ${{ matrix.jdk-version }}
        uses: actions/setup-java@99b8673
        with:
          java-version: ${{ matrix.jdk-version }}
          distribution: microsoft
          cache: maven

      - name: Build with Maven
        run: ./mvnw -B -Pbug-check -DskipTests -Pcompile-jdk${{ matrix.java-version }} clean install --file pom.xml
        working-directory: java

      # API tests run on JDK 17+
      - name: Run integration tests
        run: ../mvnw -B -Pbug-check clean install --file pom.xml
        working-directory: java/api-test
        env:
          OPENAI_API_KEY: ""
          AZURE_OPENAI_ENDPOINT: ""
          AZURE_OPENAI_API_KEY: ""
          AZURE_OPENAI_DEPLOYMENT_NAME: ""
        if: ${{ matrix.java-version >= 17 }}

      # Samples build on JDK 17+
      - name: Build semantic-kernel samples
        run: ../mvnw -B clean install --file pom.xml
        working-directory: java/samples
        if: ${{ matrix.java-version >= 17 }}
